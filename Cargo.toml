[package]
name = "eframe_template"
version = "0.1.0"
authors = ["huangjin"]
edition = "2021"
rust-version = "1.65"

[features]
default = ["syntect"]
syntect = ["dep:syntect"]

[dependencies]
egui = "0.22.0"
# egui_extras = "0.22.0"
eframe = { version = "0.22.0", default-features = false, features = [
    # "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    # "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    # "wayland",
    "persistence",   # Enable restoring app state when restarting the app.
] }
egui_commonmark = {version = "0.7.3",features=["syntax_highlighting","svg","fetch"]}
egui_logger="0.3.1"
egui_file="0.9.0"
# egui-datepicker = "0.3"
egui_dnd = "0.4.0"
egui-notify = "0.7.0"
egui_dock ={version="0.6.3", features=["serde"]}
catppuccin-egui ="3.0.0"

log = "0.4.17"

syntect = { version = "5.0.0", optional = true }

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
json5="0.4.1"
json5format = "0.2.6"
anyhow = "1.0"
chrono = {version="0.4",features=["wasmbind"]}
hdrhistogram = "7.5.2" #直方图统计
# lazy_static = "1.4.0"
once_cell = "1.18.0"
serde_json = "1.0.81"
weighted_trie = "0.1.4" 
# redb = "1.0.0"
enum-map = { version = "2", features = ["serde"] }
fake = {version="2.6.1", features=["chrono","http","uuid"] }
uuid = {version = "1.1.2", features = [ "v4","fast-rng","macro-diagnostics"]}
rand = "0.8.5"
# rfd = "0.11.4"
base64 = "0.21.2"
# minijinja = {version="1.0.1",features=["loader","default","json"]}
minijinja = {git="https://github.com/mitsuhiko/minijinja",features=["default","json","custom_syntax"]}
# tera = "1.16"
futures = "0.3.5"
reqwest = {version="0.11.10",features=["cookies","multipart","json"]}
# js-sandbox = "0.1.6"
# rustpython = {git="https://github.com/RustPython/RustPython.git"}
rhai = {version = "1.15",features = ["sync","decimal","serde"]}
# rhai-rand = "0.1.5"  
# rhai-sci = "0.2.0" 
# rhai-fs = "0.1.2"
# rhai-url = "0.0.2" 
# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
# tracing-subscriber = "0.3"
rust-crypto = "0.2.36"
tokio={version="1.26.0",features=["rt","rt-multi-thread","sync"]}
tokio-stream = {version = "0.1.14"}

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio={version="1.26.0",features=["rt","macros","sync"]}
console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4"
getrandom = { version = "0.2.9", features = ["js"] }
# [build]
# target = ["wasm64-unknown-unknown"]

[profile.release]
opt-level = 'z' # fast and small wasm
lto = true
panic = 'abort'
codegen-units = 1
# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

[build-dependencies]
cc="*"

[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
